{"version":3,"file":"static/js/848.55f2a31d.chunk.js","mappings":"yKAGA,MAiCA,EAjCgBA,IAAwC,IAAvC,gBAAEC,EAAe,aAAEC,GAAcF,EAC9C,MAAMG,GAAaC,EAAAA,EAAAA,QAAO,OAE1BC,EAAAA,EAAAA,YAAU,KACN,IAAIC,EAAcC,EAAAA,GAAOC,MAAMP,GAG/BK,EAAcA,EAAYG,QAAQ,0BAA2B,yCAGzDN,EAAWO,UACXP,EAAWO,QAAQC,UAAYL,EACnC,GACD,CAACL,IAaJ,OACIW,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACtBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAeE,IAAKZ,EAAYa,SAblCC,KACjB,GAAIf,GAAgBC,EAAWO,QAAS,CACpC,MAAMQ,EAAiBf,EAAWO,QAC5BS,EAAQD,EAAeE,WAAaF,EAAeG,aAAeH,EAAeI,cAEjFC,EAAgBC,SAASC,cAAc,YACvCC,GAAWH,EAAcF,aAAeE,EAAcD,cAAgBH,EAC5EI,EAAcI,SAAS,EAAGD,EAC9B,MAMM,C","sources":["Preview.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { marked } from 'marked';\r\n\r\nconst Preview = ({ markdownContent, isSyncScroll }) => {\r\n    const previewRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        let htmlContent = marked.parse(markdownContent);\r\n\r\n        // 用正则匹配所有 table 元素，并包装在 div 中\r\n        htmlContent = htmlContent.replace(/(<table>.*?<\\/table>)/gs, '<div class=\"table-container\">$1</div>');\r\n\r\n        // 更新预览区的 HTML\r\n        if (previewRef.current) {\r\n            previewRef.current.innerHTML = htmlContent;\r\n        }\r\n    }, [markdownContent]);\r\n\r\n    const handleScroll = () => {\r\n        if (isSyncScroll && previewRef.current) {\r\n            const previewElement = previewRef.current;\r\n            const ratio = previewElement.scrollTop / (previewElement.scrollHeight - previewElement.clientHeight);\r\n\r\n            const editorElement = document.querySelector('.md_edit');\r\n            const targetY = (editorElement.scrollHeight - editorElement.clientHeight) * ratio;\r\n            editorElement.scrollTo(0, targetY);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"rich_text\">\r\n            <div className=\"preview-area\" ref={previewRef} onScroll={handleScroll}></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preview;\r\n"],"names":["_ref","markdownContent","isSyncScroll","previewRef","useRef","useEffect","htmlContent","marked","parse","replace","current","innerHTML","_jsx","className","children","ref","onScroll","handleScroll","previewElement","ratio","scrollTop","scrollHeight","clientHeight","editorElement","document","querySelector","targetY","scrollTo"],"sourceRoot":""}